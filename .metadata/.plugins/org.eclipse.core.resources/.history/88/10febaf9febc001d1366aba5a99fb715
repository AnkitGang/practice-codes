package Stack;

import java.util.*;

public class ValidParentheses {
	public static void main(String[] args) {
		ValidParentheses v = new ValidParentheses();
		String s = "[](){";
		System.out.println(v.isValid(s));
	}
	
	public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
        for(int i=0; i<s.length(); i++){
            char x = s.charAt(i);
            if(x == '(' || x == '[' || x == '{') {
                stack.push(x);
                continue;
            }
            
            if(stack.isEmpty())
                return false;
            
            char c;
            switch(x){
                case ')': 
                    c = stack.pop();
                    if(c == '[' || c == '{')
                        return false;
                    break;
                case ']':
                    c = stack.pop();
                    if(c == '(' || c == '{')
                        return false;
                    break;
                case '}':
                    c = stack.pop();
                    if(c == '(' || c == '[')
                        return false;
                    break;
            }
        }
        
        return stack.isEmpty();
    }
}
