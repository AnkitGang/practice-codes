package Linked_List;

class Add{
	public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
		ListNode ans = new ListNode(0);
        ListNode curr = ans;
		int carry = 0, sum = 0;
		
		while(l1 != null || l2 != null) {
            int n1 = (l1 != null) ? l1.val : 0;
            int n2 = (l2 != null) ? l2.val : 0;
            
            sum = carry + n1 + n2;
            carry = sum/10;
            
            curr.next = new ListNode(sum % 10);
            curr = curr.next;
            
            if(l1 != null)
                l1 = l1.next;
            
            if(l2 != null)
                l2 = l2.next;
		}
        
        if(carry > 0){
            curr.next = new ListNode(carry);
        }
		
		return ans.next;
	}
}

class List{
	ListNode head;
	
	public void addToTheLast(ListNode node) {
		if(head == null) {
			head = node;
		}
		else {
			ListNode temp = head;
			while(temp.next != null) {
				temp = temp.next;
			}
			temp.next = node;
		}
	}
}

public class AddTwoNumbers {
	public static void main(String[] args) {
		Add add = new Add();
//		List l1 = new List();
//		List l2 = new List();
//		
//		l1.addToTheLast(new Node(2));
//		l1.addToTheLast(new Node(4));
//		l1.addToTheLast(new Node(3));
//		
//		l2.addToTheLast(new Node(5));
//		l2.addToTheLast(new Node(6));
//		l2.addToTheLast(new Node(4));
//		
//		l1.print();
//		System.out.println();
//		l2.print();
//		
//		List l3 = new List();
		
		Node head1 = new Node(9);
		Node l1 = new Node(9);
		Node l2 = new Node(9);
		Node l6 = new Node(9);
		head1.next = l1;
		l1.next = l2;
		l2.next = l6;
		
		Node head2 = new Node(9);
		Node l3 = new Node(9);
		Node l4 = new Node(9);
		head2.next = l3;
		l3.next = l4;
		//l4.next = l6;
		
		Node l5 = add.addTwoNumbers(head1, head2);
		
		System.out.println("Sum = ");
		printList(l5);
	}
	
	public static void printList(Node head) {
		while(head != null) {
			System.out.print(head.data + " ");
			head = head.next;
		}
	}
}


